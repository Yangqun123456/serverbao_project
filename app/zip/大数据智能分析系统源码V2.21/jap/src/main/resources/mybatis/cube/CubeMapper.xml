<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jusfoun.jap.cube.mapper.CubeMapper" >
	<resultMap id="CubeInfoMap" type="com.jusfoun.jap.cube.vo.CubeVo" >
    <id column="cube_ID" property="cubeId" jdbcType="VARCHAR" />
    <result column="cube_name" property="cubeName" jdbcType="VARCHAR" />
    <result column="cube_name_cn" property="cubeNameCn" jdbcType="VARCHAR" />
    <result column="cube_description" property="cubeDescription" jdbcType="VARCHAR" />
    <result column="cube_Date" property="cubeDate" jdbcType="DATE" />
    <result column="cube_status" property="cubeStatus" jdbcType="VARCHAR" />
    <collection property="tagList" ofType="com.jusfoun.jap.cube.domain.Tag" resultMap="tagMap"/>
  </resultMap>
  <resultMap id="tagMap" type="com.jusfoun.jap.cube.domain.Tag" >
    <id column="tag_ID" property="tagId" jdbcType="VARCHAR" />
    <result column="tag_name" property="tagName" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="CubeMap" type="com.jusfoun.jap.cube.domain.Cube" >
    <id column="cube_ID" property="cubeId" jdbcType="VARCHAR" />
    <result column="cube_name" property="cubeName" jdbcType="VARCHAR" />
    <result column="cube_name_cn" property="cubeNameCn" jdbcType="VARCHAR" />
    <result column="cube_description" property="cubeDescription" jdbcType="VARCHAR" />
    <result column="cube_Date" property="cubeDate" jdbcType="DATE" />
    <result column="cube_status" property="cubeStatus" jdbcType="VARCHAR" />
    <result column="sync_rule" property="syncRule" jdbcType="BIGINT" />
    <result column="sync_status" property="syncStatus" jdbcType="BIGINT" />
    <result column="sync_time" property="syncTime" jdbcType="DATE" />
  </resultMap>
  <sql id="Base_Column_List">
    cube_ID,cube_name,cube_name_cn,cube_description,cube_Date,sync_rule,sync_status,sync_time
  </sql>
  <select id="queryByCubeName" resultMap="CubeMap" parameterType="com.jusfoun.jap.cube.vo.CubeVo">
        select <include refid="Base_Column_List" />
		        from t_cube_info
		where 1=1
	<if test="cubeNameCn != null and cubeNameCn !=''">
		AND (cube_name  like '%'||#{cubeNameCn,jdbcType=VARCHAR}||'%' or cube_name_cn  like '%'||#{cubeNameCn,jdbcType=VARCHAR}||'%') 
	</if>
	<if test="cubeStatus != null and cubeStatus !=''">
		 AND cube_status = #{cubeStatus,jdbcType=VARCHAR}
	</if>
  </select>
  
  <select id="viewCubeByCondition" resultMap="CubeInfoMap" parameterType="com.jusfoun.jap.cube.domain.Cube">
       select * from t_cube_info ci left join  T_CUBE_TAG ct on ci.cube_id = ct.cube_id left join T_TAG_INFO ti on ct.tag_id = ti.tag_id where ci.cube_id  = #{cubeId}
  </select>
    
	<insert id="insertCube" parameterType="com.jusfoun.jap.cube.vo.CubeVo">
	    INSERT INTO t_cube_info(cube_ID,cube_name,cube_name_cn,cube_description,cube_Date,cube_Status,sync_rule,sync_status)
	     VALUES(#{cubeId}, #{cubeName,jdbcType=VARCHAR}, #{cubeNameCn,jdbcType=VARCHAR}, #{cubeDescription,jdbcType=VARCHAR}, #{cubeDate}, #{cubeStatus,jdbcType=VARCHAR},#{syncRule,jdbcType=BIGINT},#{syncStatus,jdbcType=BIGINT})
	</insert>

	<insert id="insertFact" parameterType="com.jusfoun.jap.workTable.domain.CubeFact">
	INSERT INTO t_cube_fact(cube_fact_ID,cube_id,fact_table_name,fact_table_column,fact_table_rule)
	  <foreach collection="list" item="item" index="index" separator="union all">
	   select sys_guid(), #{item.cubeId}, #{item.factTableName}, #{item.factTableColumn},#{item.factTableRules} from dual
	  </foreach>
	</insert>
	
	<select id="insertDim" parameterType="java.util.List">
	INSERT INTO t_cube_dim(cube_dim_ID,cube_id,dim_table_name,dim_Table_Column,table_connect_column)
	  <foreach collection="list" item="item" index="index" separator="union all" >
	    select sys_guid() , #{item.cubeId}, #{item.dimTableName}, #{item.dimColumn}, #{item.tableConnectColumn ,jdbcType=VARCHAR} from dual
	  </foreach>
	</select>
	
	<insert id="insertTagList" parameterType="java.util.List">
	INSERT INTO T_tag_info
	  <foreach collection="list" item="item" index="index" separator="union all" >
	    select sys_guid() , #{item.tagName} from dual
	  </foreach>
	</insert>

	<delete id="delCubeByCondition"  parameterType="com.jusfoun.jap.cube.domain.Cube">
        delete  from t_cube_info
		where cube_id = #{cubeId}
  	</delete>
  	
  	<delete id="delCubeByIds"  parameterType="java.lang.String">
        delete  from t_cube_info
		<if test="_parameter != null and _parameter !=''">
			where cube_id not in  ${_parameter}
		</if>
  	</delete>
  	
  	<delete id="delDimByCondition"  parameterType="com.jusfoun.jap.cube.vo.CubeVo">
        delete  from t_cube_dim where 1=1
		<if test=" cubeName!= null and cubeName !=''">
			and cube_id = (select cube_id from t_cube_info where cube_name = #{cubeName})
		</if>
  	</delete>
  	
  	<delete id="delFactByCondition"  parameterType="com.jusfoun.jap.cube.vo.CubeVo">
        delete  from T_CUBE_FACT where 1=1
		<if test=" cubeName!= null and cubeName !=''">
			and cube_id = (select cube_id from t_cube_info where cube_name = #{cubeName})
		</if>
  	</delete>
  	
  	<delete id="delFactByCubeID"  parameterType="com.jusfoun.jap.cube.domain.Cube">
        delete  from T_CUBE_FACT where  cube_id =#{cubeId}
  	</delete>
  	
  	<delete id="delDimByCubeID"  parameterType="com.jusfoun.jap.cube.domain.Cube">
        delete  from T_CUBE_DIM where  cube_id =#{cubeId}
  	</delete>
  
  	<update id="updateCubeInfo"  parameterType="com.jusfoun.jap.cube.vo.CubeVo" > 
    	update t_cube_info
    	set   
    	<if test="cubeName != null">
        cube_Name = #{cubeName} ,
        </if>
        <if test="cubeNameCn != null">
        	cube_Name_cn = #{cubeNameCn},
        </if>
        <if test="cubeStatus != null">
        	cube_Status = #{cubeStatus},
        </if>
      	<if test="cubeDescription != null">
        cube_Description = #{cubeDescription},
       	</if>
        <if test="cubeDate != null">
        cube_Date = #{cubeDate}
        </if>
        <if test="syncRule != null">
        sync_rule = #{syncRule}
        </if>
        <if test="syncStatus != null">
        sync_status = #{syncStatus}
        </if>
        <if test="syncTime != null">
        sync_time = #{syncTime}
        </if>
    where cube_Id = #{cubeId}
  </update> 
  
  <insert id="insertColumn" >
	insert into t_column_chinese (id, table_name,table_name_cn, column_name, column_name_cn) 
	select sys_guid(), tname,tname, tcol, tcol from (
		select distinct td.dim_table_name as tname, td.dim_table_column as tcol from t_cube_dim td, t_cube_info ci 
		where ci.cube_id = td.cube_id and ci.cube_status = '1'
		and (td.dim_table_name,td.dim_table_column) not in (select cc.table_name,cc.column_name from t_column_chinese cc)
		union all
		select distinct tf.fact_table_name as tname, tf.fact_table_column as tcol from t_cube_fact tf, t_cube_info ci1
		where tf.cube_id = ci1.cube_id  and ci1.cube_status = '1' 
		and (tf.fact_table_name,tf.fact_table_column) not in (select cc.table_name,cc.column_name from t_column_chinese cc)
	)
	</insert>
	<select id="findOtherTags" resultMap="tagMap" parameterType="com.jusfoun.jap.cube.domain.Cube">
		select ti.* from  T_TAG_INFO ti where ti.tag_id not in 
		(select tag_id from t_cube_tag where cube_id =#{cubeId} )
	</select> 
	<select id="findTags" resultMap="tagMap" parameterType="java.util.List">
	select * from T_tag_info where tag_name in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item.tagName}
        </foreach>
	</select>
	
	<insert id="insertNewCubeTag" parameterType="com.jusfoun.jap.cube.vo.CubeVo">
		insert into t_cube_tag 
		<foreach close=")" collection="newTagList" item="item" index="index" open="(" separator="union">
	    	select sys_guid(),tag_id, #{cubeId} from t_tag_info where tag_name = #{item.tagName}
	  	</foreach>
	</insert>
	
	<insert id="insertCubeTag" parameterType="com.jusfoun.jap.cube.vo.CubeVo">
		insert into t_cube_tag 
		<foreach close=")" collection="addTagList" item="item" index="index" open="(" separator="union">
	    	select sys_guid(),tag_id, #{cubeId} from t_tag_info where tag_name = #{item.tagName}
	  	</foreach>
	</insert>
	
	<delete id="delTagList" parameterType="com.jusfoun.jap.cube.vo.CubeVo">
		delete from t_cube_tag where (cube_id , tag_id) in 
		<foreach close=")" collection="delTagList" item="item" index="index" open="(" separator="union">
	    	select #{cubeId},#{item.tagId} from dual
	  	</foreach>
	</delete>
	<delete id="delOtherTag">
		delete from T_tag_info where tag_id not in (select tag_id from t_cube_tag)
	</delete>
	
</mapper>